// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using event_service.Data;

#nullable disable

namespace event_service.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ticket", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("EventId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("event_service.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#ff0000",
                            EventId = 1,
                            Name = "VIP",
                            Price = 500f,
                            Seats = 100
                        },
                        new
                        {
                            Id = 2,
                            Color = "#ff0000",
                            EventId = 1,
                            Name = "Normal",
                            Price = 60f,
                            Seats = 500
                        },
                        new
                        {
                            Id = 3,
                            Color = "#ff0000",
                            EventId = 2,
                            Name = "Normal",
                            Price = 50f,
                            Seats = 400
                        },
                        new
                        {
                            Id = 4,
                            Color = "#ff0000",
                            EventId = 2,
                            Name = "VIP",
                            Price = 700f,
                            Seats = 100
                        });
                });

            modelBuilder.Entity("event_service.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("event_service.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DesignId")
                        .HasColumnType("int");

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_finished")
                        .HasColumnType("bit");

                    b.Property<bool>("On_sell")
                        .HasColumnType("bit");

                    b.Property<string>("OrganizerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizerId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "address",
                            City = "Tangier",
                            CreationDate = new DateTime(2024, 5, 3, 12, 55, 4, 118, DateTimeKind.Local).AddTicks(7095),
                            Description = "i am a football match",
                            DesignId = 0,
                            Duration = 0f,
                            EventDate = new DateTime(2024, 5, 3, 12, 55, 4, 118, DateTimeKind.Local).AddTicks(7093),
                            EventType = "Sports",
                            Is_finished = false,
                            On_sell = true,
                            OrganizerId = "1",
                            Poster = "1YwGlpSZ3wrNrUhF3sVxMaaC6iIz1hDp5",
                            Time = "13h00",
                            Title = "Match"
                        },
                        new
                        {
                            Id = 2,
                            Address = "address",
                            City = "Tangier",
                            CreationDate = new DateTime(2024, 5, 3, 12, 55, 4, 118, DateTimeKind.Local).AddTicks(7113),
                            Description = "i am a movie",
                            DesignId = 0,
                            Duration = 0f,
                            EventDate = new DateTime(2024, 5, 3, 12, 55, 4, 118, DateTimeKind.Local).AddTicks(7112),
                            EventType = "Cinema",
                            Is_finished = false,
                            On_sell = true,
                            OrganizerId = "2",
                            Poster = "1YwGlpSZ3wrNrUhF3sVxMaaC6iIz1hDp995",
                            Time = "00h00",
                            Title = "Match"
                        });
                });

            modelBuilder.Entity("event_service.Entities.Image", b =>
                {
                    b.Property<string>("url")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.HasKey("url");

                    b.HasIndex("EventId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("event_service.Entities.Organizer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizers");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Email = "anas@gmail.com",
                            OrganizationName = "ENSA",
                            PhoneNumber = "1234567890",
                            firstname = "anas",
                            lastname = "chatt"
                        },
                        new
                        {
                            Id = "2",
                            Email = "aimane@gmail.com",
                            OrganizationName = "ENSA",
                            PhoneNumber = "1234567890",
                            firstname = "aimane",
                            lastname = "chanaa"
                        });
                });

            modelBuilder.Entity("Ticket", b =>
                {
                    b.HasOne("event_service.Entities.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("event_service.Entities.Event", null)
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("event_service.Entities.Category", b =>
                {
                    b.HasOne("event_service.Entities.Event", "Event")
                        .WithMany("Categories")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Event");
                });

            modelBuilder.Entity("event_service.Entities.Event", b =>
                {
                    b.HasOne("event_service.Entities.Organizer", "Organizer")
                        .WithMany()
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("event_service.Entities.Image", b =>
                {
                    b.HasOne("event_service.Entities.Event", "Event")
                        .WithMany("Images")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Event");
                });

            modelBuilder.Entity("event_service.Entities.Event", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
