# networks:
#   tickexNetwork:

services:

  # Kafka components
  # zookeeper:
  #   image: 'bitnami/zookeeper:latest'
  #   container_name: zookeeper
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   networks:
  #     - tickexNetwork

  # kafka:
  #   image: 'bitnami/kafka:latest'
  #   container_name: kafka
  #   ports:
  #     - '9092:9092'
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes 
  #   volumes:
  #     - ./Kafka:/bitnami/kafka 
  #   networks:
  #     - tickexNetwork  
      
  tickex-gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - '8080:8760'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/actuator/health"]
      interval: 10s
      retries: 10
    depends_on:
      - tickex-discovery-service
      - tickex-payment-service
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka


  tickex-discovery-service:
    build: ./discovery-service
    container_name: discovery-service
    expose:
      - '8761'

  tickex-payment-service:
    build: ./payment-service
    container_name: payment-service
    expose:
      - '9091'
    depends_on:
      - tickex-discovery-service
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka



  # authentication-service-db: 
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   container_name: authentication-service-db
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - SA_PASSWORD=1234Strong!Password
  #   ports:
  #     - '1433:1433'
  #   networks:
  #     - tickexNetwork

  event-service-db: 
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: event-service-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=1234Strong!Password
    ports:
      - '1434:1433'
   

  # authentication-service:
  #   container_name: authentication-service
  #   build: 
  #     context: ./authentication-service/
  #     dockerfile: Dockerfile
  #   environment:
  #     - DB_HOST=authentication-service-db
  #     - DB_NAME=Authentication
  #     - DB_SA_PASSWORD=1234Strong!Password
  #   depends_on:
  #     - tickex-gateway-service
  #   ports:
  #     - '8081:8081'
  #     - '8080:8080'
  #   networks:
  #     - tickexNetwork

  event-service:
    container_name: event-service
    build: 
      context: ./event-service/
      dockerfile: Dockerfile
    environment:
      - DB_HOST=event-service-db
      - DB_NAME=Events
      - DB_SA_PASSWORD=1234Strong!Password
    # depends_on:
    #   - tickex-gateway-service
    ports:
      - '8082:8080'
      - '8083:8081'